/*
 * Midterm_121044029_Mehmet_Gurol_Cay
 *
 * seeWhat.h
 * -------
 * Created on 09/04/2016 by Mehmet Gurol Cay
 *
 * Description
 * -----------
 * 		The seeWhat program performs shiftedReverse and 2D Convolution
 *      operations on a 2n * 2n matrix randomly generated by the timerServer
 *      program. This saves the results of the operation in the
 *      sw_ # n_ # pid_log.txt file for each matrix received.
 *
 *      The shiftedReverse operation is the calculation of the determinant of
 *      the matrix obtained by taking the inverse of the n*n parts of
 *      the 2n*2n matrix and replacing it.
 *
 *
 */

#ifndef SEEWHAT_H
#define SEEWHAT_H

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <math.h>
#include <signal.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>
#include <unistd.h>
#include <sys/wait.h>
#include <sys/types.h>

#define ERROR -1
#define FIFO_PERMS (S_IRWXU | S_IWGRP | S_IWOTH)
#define SHOWRESULTS_FIFO "showResults.fifo"
#define SHIFTEDREV_FILE "shiftedRev.txt"
#define TWODCONV_FILE "twodConv.txt"
#define SEEWHAT_LOG_FILE "seeWhat"
#define LOG_EXTESION ".log"
#define MM_SIZE 20 	// maximum matrix size
#define BILLION 1000000000L

typedef enum{
	false , true
} bool;

struct ServerInf {
	int serverPID;
	int matrixSize;
	int timeMSec;
};

struct SubServerInf{
	double matrix[MM_SIZE][MM_SIZE];
	double det;
	int subServerPID;
	int isKill;
};

struct ClientInf {
	int clientPID;
	char clientFifoName[32];
};

struct SRevAnd2DCovMatrix{
	double **shiftedRevMatrix;
	double **twoDConvMatrix;
};

struct ResultOfMatrices{
	int clientPID;
	double orgDet;
	double detShifted;
	int calcTimeOfShifted;
	double detConvolution;
	int calcTimeOfConv;
	int isKill;
};


//Global variables
char *mainFifoName;
int sigIntFlag = 0;
int mainFifoFD;
struct ServerInf serverInf;
struct SubServerInf subServerInf;
struct ClientInf clientInf;
struct SRevAnd2DCovMatrix sRev2DCov;
struct ResultOfMatrices resultOfMatrices;
double **tempMatrix;
double kernelMatrix[3][3];
char logFileName[32];
char shiftedReverseTxt[32];
char convolutionTxt[32];
FILE *pClientLog;


void SIGINT_handler(int signum);
void requestToServer();
ssize_t r_read(int fd, void *buf, size_t size);
double **allocMatrix(int size);
void freeMatrix(double **mat, int size);
bool readMatrixInf(int clientFifoFD);
void shiftedReverse();
void twoDConvolution();
double **generateUnitMatrix(int matrixSize);

double determinant(double **mtrx,int size);
bool areInvertibleSubMatrix();
void copyMatrix(double **destMtrx, int startIndex, int startRIndex, int size);
void copyShiftedRevMat(double **source,int startCIndex,int startRIndex, int size);
void invertSubMatrix(double **tempMatrix,double **unitMatrix,int sizeOfMatrix);
void writeToLogFile();
void readFromFile();
void sendDatasToShowResult();

#endif
